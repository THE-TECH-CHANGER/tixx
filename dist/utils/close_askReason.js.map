{"version":3,"file":"close_askReason.js","sourceRoot":"/","sources":["utils/close_askReason.ts"],"names":[],"mappings":";AAAA;;;;;EAKE;;;AAEF,2CAAkJ;AAG3I,MAAM,cAAc,GAAG,KAAK,EAAC,WAAmD,EAAE,MAAsB,EAAE,EAAE;IAElH,yDAAyD;IACzD,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;QACrD,KAAK,EAAE;YACN,SAAS,EAAE,WAAW,CAAC,OAAO,EAAE,EAAE;SAClC;KACD,CAAC,CAAC;IACH,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAe,CAAC,CAAC,CAAC,SAAS,CAAC;IAElF,IACC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,iBAAiB,KAAK,WAAW;QAC3D,CAAE,WAAW,CAAC,MAA6B,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,8BAA8B,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;YAChI,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAEvC,OAAO,WAAW;aAChB,KAAK,CAAC;YACN,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,2BAA2B,CAAC;YAC7D,SAAS,EAAE,IAAI;SACf,CAAC;aACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEhC,MAAM,KAAK,GAAG,IAAI,yBAAY,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,mBAAmB,EAAE,OAAO,CAAC,CAAC,CAAC;IAE5I,MAAM,KAAK,GAAG,IAAI,6BAAgB,EAAE;SAClC,WAAW,CAAC,QAAQ,CAAC;SACrB,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;SAC3E,QAAQ,CAAC,2BAAc,CAAC,SAAS,CAAC;SAClC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,mBAAmB,EAAE,aAAa,CAAC,CAAC;SACxF,YAAY,CAAC,GAAG,CAAC,CAAC;IAEpB,MAAM,cAAc,GAAG,IAAI,6BAAgB,EAAoB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACrF,KAAK,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IACpC,MAAM,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC;AAlCW,QAAA,cAAc,kBAkCzB;AAEF;;;;;EAKE","sourcesContent":["/*\nCopyright 2023 Sayrix (github.com/Sayrix)\n\nLicensed under the Creative Commons Attribution 4.0 International\nplease check https://creativecommons.org/licenses/by/4.0 for more informations.\n*/\n\nimport { ActionRowBuilder, ButtonInteraction, CommandInteraction, GuildMember, ModalBuilder, TextInputBuilder, TextInputStyle } from \"discord.js\";\nimport {ExtendedClient, TicketType} from \"../structure\";\n\nexport const closeAskReason = async(interaction: CommandInteraction | ButtonInteraction, client: ExtendedClient) => {\n\n\t// @TODO: Breaking change refactor happens here as well..\n\tconst ticket = await client.prisma.tickets.findUnique({\n\t\twhere: {\n\t\t\tchannelid: interaction.channel?.id\n\t\t}\n\t});\n\tconst ticketType = ticket ? JSON.parse(ticket.category) as TicketType : undefined;\n\t\n\tif (\n\t\tclient.config.closeOption.whoCanCloseTicket === \"STAFFONLY\" &&\n\t\t!(interaction.member as GuildMember | null)?.roles.cache.some((r) => client.config.rolesWhoHaveAccessToTheTickets.includes(r.id) ||\n\t\tticketType?.staffRoles?.includes(r.id))\n\t)\n\t\treturn interaction\n\t\t\t.reply({\n\t\t\t\tcontent: client.locales.getValue(\"ticketOnlyClosableByStaff\"),\n\t\t\t\tephemeral: true,\n\t\t\t})\n\t\t\t.catch((e) => console.log(e));\n\n\tconst modal = new ModalBuilder().setCustomId(\"askReasonClose\").setTitle(client.locales.getSubValue(\"modals\", \"reasonTicketClose\", \"title\"));\n\n\tconst input = new TextInputBuilder()\n\t\t.setCustomId(\"reason\")\n\t\t.setLabel(client.locales.getSubValue(\"modals\",\"reasonTicketClose\", \"label\"))\n\t\t.setStyle(TextInputStyle.Paragraph)\n\t\t.setPlaceholder(client.locales.getSubValue(\"modals\", \"reasonTicketClose\", \"placeholder\"))\n\t\t.setMaxLength(256);\n\n\tconst firstActionRow = new ActionRowBuilder<TextInputBuilder>().addComponents(input);\n\tmodal.addComponents(firstActionRow);\n\tawait interaction.showModal(modal).catch((e) => console.log(e));\n};\n\n/*\nCopyright 2023 Sayrix (github.com/Sayrix)\n\nLicensed under the Creative Commons Attribution 4.0 International\nplease check https://creativecommons.org/licenses/by/4.0 for more informations.\n*/\n"]}