{"version":3,"file":"massadd.js","sourceRoot":"/","sources":["commands/massadd.ts"],"names":[],"mappings":"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","sourcesContent":["import {BaseCommand, ExtendedClient} from \"../structure\";\nimport {CommandInteraction, SlashCommandBuilder, TextChannel} from \"discord.js\";\nimport {log} from \"../utils/logs\";\n\n/*\nCopyright © 2023 小兽兽/zhiyan114 (github.com/zhiyan114)\nFile is licensed respectively under the terms of the Apache License 2.0\nor whichever license the project is using at the time https://github.com/Sayrix/Ticket-Bot/blob/main/LICENSE\n*/\n\n\n// Use add command if possible, otherwise you're missing out on proper user validation...\nexport default class MassAddCommand extends BaseCommand {\n\tpublic static data: SlashCommandBuilder = <SlashCommandBuilder>new SlashCommandBuilder()\n\t\t.setName(\"massadd\")\n\t\t.setDescription(\"Add multiple users to the ticket. It's recommended to use the regular add command when possible.\")\n\t\t.addStringOption((input) => input.setName(\"users\").setDescription(\"Users to add. Use ',' as seperator.\").setRequired(true));\n\tconstructor(client: ExtendedClient) {\n\t\tsuper(client);\n\t}\n\n\tasync execute(interaction: CommandInteraction) {\n\n\t\t// In-case users will try things\n\t    const users = await Promise.all((interaction.options.get(\"users\", true).value as string)\n\t\t\t.replace(/\\s/g, \"\") // Remove space incase user adds it as a seperator\n\t\t\t.split(\",\") // Get a list from it\n\t\t\t.filter((user) => user !== \"\") // anti seperator spams at the end lmao\n\t\t\t.map(async user => await this.client.users.fetch(user))); // Convert it to discord users objects\n\t\t\n\t\t// Additional checks\n\t\tif(users.length == 0) return await interaction.reply({ content: \"You need to specify at least one user\", ephemeral: true });\n\t\tif(users.length > 25) return await interaction.reply({ content: \"You can't add more than 25 users\", ephemeral: true });\n\n\t\tconst ticket = await this.client.prisma.tickets.findUnique({\n\t\t\tselect: {\n\t\t\t\tid: true,\n\t\t\t\tinvited: true,\n\t\t\t},\n\t\t\twhere: {\n\t\t\t\tchannelid: interaction.channel?.id\n\t\t\t}\n\t\t});\n\n\t\tif (!ticket) return interaction.reply({ content: \"Ticket not found\", ephemeral: true }).catch((e) => console.log(e));\n\n\t\tconst invited = JSON.parse(ticket.invited) as string[];\n\n\t\tfor(const user of users) {\n\t\t\tif (invited.includes(user.id))\n\t\t\t\tcontinue;\n\n\t\t\tif (invited.length >= 25)\n\t\t\t\tbreak;\n\n\t\t\tinvited.push(user.id);\n\n\t\t\tawait (interaction.channel as TextChannel | null)?.permissionOverwrites\n\t\t\t\t.edit(user, {\n\t\t\t\t\tSendMessages: true,\n\t\t\t\t\tAddReactions: true,\n\t\t\t\t\tReadMessageHistory: true,\n\t\t\t\t\tAttachFiles: true,\n\t\t\t\t\tViewChannel: true,\n\t\t\t\t});\n\t\t\tlog(\n\t\t\t\t{\n\t\t\t\t\tLogType: \"userAdded\",\n\t\t\t\t\tuser: interaction.user,\n\t\t\t\t\tticketId: ticket.id.toString(),\n\t\t\t\t\tticketChannelId: interaction.channel?.id,\n\t\t\t\t\ttarget: user,\n\t\t\t\t},\n\t\t\t\tthis.client\n\t\t\t);\n\t\t}\n\n\t\tawait this.client.prisma.tickets.update({\n\t\t\tdata: {\n\t\t\t\tinvited: JSON.stringify(invited)\n\t\t\t},\n\t\t\twhere: {\n\t\t\t\tchannelid: interaction.channel?.id\n\t\t\t}\n\t\t});\n\n\t\tawait interaction.reply({ content: \"> Mass User Add Completed! Do note that not all users may be added if internal checks failed. It's advise you use the regular add command to guarantee the add status.\" });\n\t}\n}\n"]}