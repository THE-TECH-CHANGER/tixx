{"version":3,"file":"add.js","sourceRoot":"/","sources":["commands/add.ts"],"names":[],"mappings":";;AAAA,4CAAyD;AACzD,2CAAsF;AACtF,wCAAkC;AAElC;;;;;EAKE;AAEF,MAAqB,UAAW,SAAQ,uBAAW;IAC3C,MAAM,CAAC,IAAI,GAA6C,IAAI,gCAAmB,EAAE;SACtF,OAAO,CAAC,KAAK,CAAC;SACd,cAAc,CAAC,2BAA2B,CAAC;SAC3C,aAAa,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACtG,YAAY,MAAsB;QACjC,KAAK,CAAC,MAAM,CAAC,CAAC;IACf,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,WAA+B;QAE5C,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,IAAY,CAAC;QACjE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YAC1D,MAAM,EAAE;gBACP,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,IAAI;aACb;YACD,KAAK,EAAE;gBACN,SAAS,EAAE,WAAW,CAAC,OAAO,EAAE,EAAE;aAClC;SACD,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM;YAAE,OAAO,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,kBAAkB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAErH,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAa,CAAC;QACvD,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YAAE,OAAO,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1I,IAAI,OAAO,CAAC,MAAM,IAAI,EAAE;YACvB,OAAO,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,kCAAkC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAEzH,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACvB,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YACvC,IAAI,EAAE;gBACL,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;aAChC;YACD,KAAK,EAAE;gBACN,SAAS,EAAE,WAAW,CAAC,OAAO,EAAE,EAAE;aAClC;SACD,CAAC,CAAC;QAEH,MAAO,WAAW,CAAC,OAA8B,EAAE,oBAAoB;aACrE,IAAI,CAAC,KAAK,EAAE;YACZ,YAAY,EAAE,IAAI;YAClB,YAAY,EAAE,IAAI;YAClB,kBAAkB,EAAE,IAAI;YACxB,WAAW,EAAE,IAAI;YACjB,WAAW,EAAE,IAAI;SACjB,CAAC,CAAC;QAEJ,MAAM,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa,KAAK,CAAC,EAAE,iBAAiB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1G,IAAA,UAAG,EACF;YACC,OAAO,EAAE,WAAW;YACpB,IAAI,EAAE,WAAW,CAAC,IAAI;YACtB,QAAQ,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE;YAC9B,eAAe,EAAE,WAAW,CAAC,OAAO,EAAE,EAAE;YACxC,MAAM,EAAE,KAAK;SACb,EACD,IAAI,CAAC,MAAM,CACX,CAAC;IACH,CAAC;;AA7DF,6BA8DC;AAED;;;;;EAKE","sourcesContent":["import {BaseCommand, ExtendedClient} from \"../structure\";\r\nimport {CommandInteraction, SlashCommandBuilder, TextChannel, User} from \"discord.js\";\r\nimport {log} from \"../utils/logs\";\r\n\r\n/*\r\nCopyright 2023 Sayrix (github.com/Sayrix)\r\n\r\nLicensed under the Creative Commons Attribution 4.0 International\r\nplease check https://creativecommons.org/licenses/by/4.0 for more informations.\r\n*/\r\n\r\nexport default class AddCommand extends BaseCommand {\r\n\tpublic static data: SlashCommandBuilder = <SlashCommandBuilder>new SlashCommandBuilder()\r\n\t\t.setName(\"add\")\r\n\t\t.setDescription(\"Add someone to the ticket\")\r\n\t\t.addUserOption((input) => input.setName(\"user\").setDescription(\"The user to add\").setRequired(true));\r\n\tconstructor(client: ExtendedClient) {\r\n\t\tsuper(client);\r\n\t}\r\n\r\n\tasync execute(interaction: CommandInteraction) {\r\n\r\n\t\tconst added = interaction.options.get(\"user\", true).user as User;\r\n\t\tconst ticket = await this.client.prisma.tickets.findUnique({\r\n\t\t\tselect: {\r\n\t\t\t\tid: true,\r\n\t\t\t\tinvited: true,\r\n\t\t\t},\r\n\t\t\twhere: {\r\n\t\t\t\tchannelid: interaction.channel?.id\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (!ticket) return interaction.reply({ content: \"Ticket not found\", ephemeral: true }).catch((e) => console.log(e));\r\n\r\n\t\tconst invited = JSON.parse(ticket.invited) as string[];\r\n\t\tif (invited.includes(added.id)) return interaction.reply({ content: \"User already added\", ephemeral: true }).catch((e) => console.log(e));\r\n\r\n\t\tif (invited.length >= 25)\r\n\t\t\treturn interaction.reply({ content: \"You can't add more than 25 users\", ephemeral: true }).catch((e) => console.log(e));\r\n\r\n\t\tinvited.push(added.id);\r\n\t\tawait this.client.prisma.tickets.update({\r\n\t\t\tdata: {\r\n\t\t\t\tinvited: JSON.stringify(invited)\r\n\t\t\t},\r\n\t\t\twhere: {\r\n\t\t\t\tchannelid: interaction.channel?.id\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tawait (interaction.channel as TextChannel | null)?.permissionOverwrites\r\n\t\t\t.edit(added, {\r\n\t\t\t\tSendMessages: true,\r\n\t\t\t\tAddReactions: true,\r\n\t\t\t\tReadMessageHistory: true,\r\n\t\t\t\tAttachFiles: true,\r\n\t\t\t\tViewChannel: true,\r\n\t\t\t});\r\n\r\n\t\tawait interaction.reply({ content: `> Added <@${added.id}> to the ticket` }).catch((e) => console.log(e));\r\n\r\n\t\tlog(\r\n\t\t\t{\r\n\t\t\t\tLogType: \"userAdded\",\r\n\t\t\t\tuser: interaction.user,\r\n\t\t\t\tticketId: ticket.id.toString(),\r\n\t\t\t\tticketChannelId: interaction.channel?.id,\r\n\t\t\t\ttarget: added,\r\n\t\t\t},\r\n\t\t\tthis.client\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/*\r\nCopyright 2023 Sayrix (github.com/Sayrix)\r\n\r\nLicensed under the Creative Commons Attribution 4.0 International\r\nplease check https://creativecommons.org/licenses/by/4.0 for more informations.\r\n*/\r\n"]}